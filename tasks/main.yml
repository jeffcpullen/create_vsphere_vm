---

- name: Validate pre-reqs available
  ansible.builtin.include_tasks:
    file: validate.yml

- name: Import Datacenter REST query
  ansible.builtin.include_tasks:
    file: set_dc.yml

- name: Import Cluster REST query
  ansible.builtin.include_tasks:
    file: set_cluster.yml

- name: Import Datastore REST query
  ansible.builtin.include_tasks:
    file: set_ds.yml

- name: Import Folder REST query
  ansible.builtin.include_tasks:
    file: set_folder.yml

- name: List relevant facts gathered
  ansible.builtin.debug:
    msg:
      - "Datacenter = '{{ vm_datacenter }}'"
      - "Cluster Name = '{{ vm_cluster }}'"
      - "Resource Pool = '{{ vm_cluster_resource_pool }}'"
      - "Datastore = '{{ vm_datastore }}'"
      - "Folder = '{{ vm_folder }}'"

# - name: Debug vm_cluster
#   ansible.builtin.debug:
#     var: vm_cluster

# - name: Debug vm_datastore
#   ansible.builtin.debug:
#     var: vm_datastore

# - name: Debug vm_folder
#   ansible.builtin.debug:
#     var: vm_folder

# - name: Debug vm_cluster_resource_pool
#   ansible.builtin.debug:
#     var: vm_cluster_resource_pool

- name: Create a VM
  vmware.vmware_rest.vcenter_vm:
    vcenter_hostname: "{{ vcenter_hostname }}"
    vcenter_username: "{{ vcenter_username }}"
    vcenter_password: "{{ vcenter_password }}"
    vcenter_validate_certs: "{{ vcenter_validate_certs }}"
    placement:
      cluster: "{{ vm_cluster }}"
      datastore: "{{ vm_datastore }}"
      folder: "{{ vm_folder }}"
      resource_pool: "{{ vm_cluster_resource_pool }}"
    name: "{{ create_vsphere_vm_name }}"
    guest_OS: "{{ create_vsphere_vm_guest_os }}"
    hardware_version: "{{ create_vsphere_vm_hardware_version }}"
    memory:
      hot_add_enabled: "{{ create_vsphere_vm_memory_hot_add_enabled }}"
      size_MiB: "{{ create_vsphere_vm_memory_size_mib }}"
  register: _result

- name: Debug _result
  ansible.builtin.debug:
    var: _result
  when: create_vsphere_vm_debug
